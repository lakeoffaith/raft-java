syntax = "proto3";

package raft;
option java_package = "com.github.wenweihu86.raft.proto";
option java_outer_classname = "RaftProto";


service RaftConsensusService {
    rpc Hello(VoteRequest) returns (VoteResponse);
    rpc PreVote(VoteRequest) returns (VoteResponse);
    rpc RequestVote(VoteRequest) returns (VoteResponse);
    rpc AppendEntries(AppendEntriesRequest) returns (AppendEntriesResponse);
    rpc InstallSnapshot(InstallSnapshotRequest) returns (InstallSnapshotResponse);
}


enum ResCode {
  RES_CODE_SUCCESS = 0;
  RES_CODE_FAIL = 1;
  RES_CODE_NOT_LEADER = 2;
}

enum EntryType {
  ENTRY_TYPE_DATA = 0;
  ENTRY_TYPE_CONFIGURATION = 1;
}

message Endpoint {
  string host = 1;
  uint32 port = 2;
}

message Server {
  uint32 server_id = 1;
  Endpoint endpoint = 2;
}

message Configuration {
  repeated Server servers = 1;
}

message LogMetaData {
  uint64 current_term = 1;
  uint32 voted_for = 2;
  uint64 first_log_index = 3;
  uint64 commit_index = 4;
}

message SnapshotMetaData {
  uint64 last_included_index = 1;
  uint64 last_included_term = 2;
  Configuration configuration = 3;
}

message LogEntry {
  uint64 term = 1;
  uint64 index = 2;
  EntryType type = 3;
  bytes data = 4;
}

message VoteRequest {
  uint32 server_id = 1;       // 请求选票的候选人的 Id
  uint64 term = 2;            // 候选人的任期号
  uint64 last_log_term = 3;   // 候选人的最后日志条目的任期号
  uint64 last_log_index = 4;  // 候选人最后日志条目的索引值
}

message VoteResponse {
  uint64 term = 1;            // 当前任期号
  bool granted = 2;           // 是否获得投票
}

message AppendEntriesRequest {
  uint32 server_id = 1;       // 领导人的Id
  uint64 term = 2;            // 领导人的任期号
  uint64 prev_log_index = 3;  // 前一条日志索引
  uint64 prev_log_term = 4;   // 前一条日志任期
  uint64 commit_index = 5;    // 已提交日志索引
  repeated LogEntry entries = 6; // 日志条目
}

message AppendEntriesResponse {
  ResCode res_code = 1;       // 响应码
  uint64 term = 2;            // 当前任期号
  uint64 last_log_index = 3;  // 最后日志索引
}

message InstallSnapshotRequest {
  uint32 server_id = 1;
  uint64 term = 2;
  SnapshotMetaData snapshot_meta_data = 3;
  string file_name = 4;
  uint64 offset = 5;
  bytes data = 6;
  bool is_first = 7;
  bool is_last = 8;
}

message InstallSnapshotResponse {
  ResCode res_code = 1;
  uint64 term = 2;
}

message GetLeaderRequest {}

message GetLeaderResponse {
  ResCode res_code = 1;
  string res_msg = 2;
  Endpoint leader = 3;
}

message AddPeersRequest {
  repeated Server servers = 1;
}

message AddPeersResponse {
  ResCode res_code = 1;
  string res_msg = 2;
}

message RemovePeersRequest {
  repeated Server servers = 1;
}

message RemovePeersResponse {
  ResCode res_code = 1;
  string res_msg = 2;
}

message GetConfigurationRequest {}

message GetConfigurationResponse {
  ResCode res_code = 1;
  string res_msg = 2;
  Server leader = 3;
  repeated Server servers = 4;
}